diff -urpN a/net/ipv4/udp.c b/net/ipv4/udp.c
--- a/net/ipv4/udp.c	2014-12-14 16:24:02.000000000 +0000
+++ b/net/ipv4/udp.c	2017-04-14 14:53:21.091922071 +0000
@@ -1173,7 +1173,8 @@ int udp_recvmsg(struct kiocb *iocb, stru
 	int err;
 	int is_udplite = IS_UDPLITE(sk);
 	bool slow;
-
+	bool checksum_valid = false;
+	
 	if (flags & MSG_ERRQUEUE)
 		return ip_recv_error(sk, msg, len, addr_len);
 
@@ -1197,12 +1198,13 @@ try_again:
 	 */
 
 	if (copied < ulen || UDP_SKB_CB(skb)->partial_cov) {
-		if (udp_lib_checksum_complete(skb))
-			goto csum_copy_err;
+		checksum_valid = !udp_lib_checksum_complete(skb);
+		if (!checksum_valid)
+		  goto csum_copy_err;
 	}
 
-	if (skb_csum_unnecessary(skb))
-		err = skb_copy_datagram_iovec(skb, sizeof(struct udphdr),
+	if (checksum_valid || skb_csum_unnecessary(skb))
+	  err = skb_copy_datagram_iovec(skb, sizeof(struct udphdr),
 					      msg->msg_iov, copied);
 	else {
 		err = skb_copy_and_csum_datagram_iovec(skb,
diff -urpN a/net/ipv6/udp.c b/net/ipv6/udp.c
--- a/net/ipv6/udp.c	2014-12-14 16:24:02.000000000 +0000
+++ b/net/ipv6/udp.c	2017-04-14 14:54:30.895923586 +0000
@@ -346,7 +346,8 @@ int udpv6_recvmsg(struct kiocb *iocb, st
 	int is_udplite = IS_UDPLITE(sk);
 	int is_udp4;
 	bool slow;
-
+	bool checksum_valid = false;
+	
 	if (flags & MSG_ERRQUEUE)
 		return ipv6_recv_error(sk, msg, len, addr_len);
 
@@ -375,12 +376,13 @@ try_again:
 	 */
 
 	if (copied < ulen || UDP_SKB_CB(skb)->partial_cov) {
-		if (udp_lib_checksum_complete(skb))
+		checksum_valid = !udp_lib_checksum_complete(skb);
+		if (!checksum_valid)
 			goto csum_copy_err;
 	}
 
-	if (skb_csum_unnecessary(skb))
-		err = skb_copy_datagram_iovec(skb, sizeof(struct udphdr),
+	if (checksum_valid || skb_csum_unnecessary(skb))
+	        err = skb_copy_datagram_iovec(skb, sizeof(struct udphdr),
 					      msg->msg_iov, copied       );
 	else {
 		err = skb_copy_and_csum_datagram_iovec(skb, sizeof(struct udphdr), msg->msg_iov);
